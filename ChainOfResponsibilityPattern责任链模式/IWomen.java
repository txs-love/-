package example.Design.ChainOfResponsibilityPattern责任链模式;

/**
 * @author txssherry@gmail.com
 * @date 2023/3/26 16:33
 */

/**
 * 古代悲哀女性的总称
 */
public interface IWomen {
    //获得个人状况
    public int getType();

    //获得个人请示，你要干什么？出去逛街？约会?还是看电影
    public String getRequest();
}
/**
 观察者模式也可以实现请求的传递，比如一个事件发生了，通知了观察者，同时观察者又作为一个被观察者，通知了另外一个观察者，这也形成了一个事件广播链，这和
 *  受众数量不同。观察者广播链式可以 1：N 的方式广播，而责任链则要求是的 1:1 的传递，必然有一个且只有一个类完成请求的处理；
 *  请求内容不同。观察者广播链中的信息可以在传播中改变，但是责任链中的请求是不可改变的；
 *  处理逻辑不通。观察者广播链主要用于触发联动动作，而责任链则是对一个类型的请求按照既定的规则进行处理。
 */
