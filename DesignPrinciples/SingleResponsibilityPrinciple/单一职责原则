基本介绍:
         1.对类来说，一个类应该只负责一个原则，如类demo负责两个不同的职责:职责A和职责B。
         当职责A需求变更时改变demo类时，可能造成职责B错误，所以需要将类A的粒度分解为A1和A2

单一职责的注意事项
         1.降低类的复杂度,一个类只负责一项职责
         2.提高类的可读性和维护性
         3.降低变更引起的风险
         4.通常情况下,我们遵守单一职责原则,只有逻辑足够简单，才可以在代码级别违反单一职责原则
           只有类当中的方法足够少时，才可以在方法级别保持单一职责原则。